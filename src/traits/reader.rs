use std::io::Error;

/// Read トレイとの実装
/// 必要機能
/// - seek
/// - no copy read
/// えっとシーク位置の指定はこれでよくて
/// RTON自体は必要な長さのデータだけをほしい
/// バッファリングするのがクソなので
/// で、だから必ず指定するlenの長さのデータを受け取るようにしたいけど
/// これはパフォーマンス的によくない
/// なぜよくないのか
/// 糞でかい場合シンプルにメモリを食う
/// 向こう側がバッファリングしている場合は考慮不要
/// なのでサイズは指定しないで、適当にむこうが渡してくるデータ長でうまく処理できるようにするしかなさそう
pub trait Read<'a> {
    /// seek 位置を指定する
    fn seek(&mut self, pos: FromSeek);
    /// データのスライスの参照を返す 長さは任意でok
    /// ## returns
    /// - `(&[u8], u64)` - スライスとその長さ
    fn read_ref(&mut self) -> Result<(&'a [u8], u64), Error>;
    /// データのサイズとる
    fn size(&self) -> u64;
}

pub enum FromSeek {
    Start(u64),
    End(i64),
    Current(i64),
}